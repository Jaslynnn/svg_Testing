{"version":3,"file":"my-options.js","sourceRoot":"","sources":["src/my-options.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;AAEH,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAE1D;;;;;;;;;;;;;;;;;;;;;;;;;;EA0BE;AAEF;;;;;;GAMG;AAEH,IAAa,SAAS,GAAtB,MAAa,SAAU,SAAQ,UAAU;IAAzC;;QAYE;;WAEG;QAEH,SAAI,GAAG,OAAO,CAAC;QACf,cAAS,GAAG,MAAM,CAAA;QAClB,cAAS,GAAG,IAAI,GAAG,CAAC;YAClB,CAAC,OAAO,EAAE,SAAS,CAAC;YACpB,CAAC,MAAM,EAAE,SAAS,CAAC;YACnB,CAAC,OAAO,EAAE,SAAS,CAAC;SACrB,CAAC,CAAC;QAEH;;WAEG;QAIH,UAAK,GAAG,CAAC,CAAC;QACV,WAAM,GAAG,SAAS,CAAA;IAsEpB,CAAC;IApEU,MAAM;QACb,OAAO,IAAI,CAAC;;;YAGJ,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC;2BACxB,IAAI,CAAC,QAAQ;uBACjB,IAAI,CAAC,KAAK;;;;;KAK5B,CAAC;IAGJ,CAAC;IAEO,QAAQ;QACd,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC;IACvD,CAAC;IAID,kBAAkB,CAAC,UAA+B;QAEhD,KAAK,IAAI,KAAK,IAAI,UAAU,EAC5B;YAEE,OAAO,IAAI,CAAA;wBACO,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;WAC5C,KAAK,CAAC,CAAC,CAAC;;;;;;KAMd,CAAC;SACH;QACD,OAAM;IACR,CAAC;IAEC;;;;OAIG;IAEH,gBAAgB,CAAC,SAAiB;QAChC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;QAGtB,OAAO;;;;OAIJ,CAAC;IAGN,CAAC;IAGD;;;OAGG;IACH,QAAQ,CAAC,IAAY;QACnB,OAAO,UAAU,IAAI,EAAE,CAAC;IAC1B,CAAC;CACF,CAAA;AApGiB,gBAAM,GAAG,GAAG,CAAA;;;;;;;;;GAS1B,CAAA;AAMF;IADC,QAAQ,EAAE;uCACI;AAcf;IAHC,QAAQ,CAAC;QACR,IAAI,EAAE,MAAM;KACb,CAAC;wCACQ;AA9BC,SAAS;IADrB,aAAa,CAAC,YAAY,CAAC;GACf,SAAS,CAqGrB;SArGY,SAAS","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {LitElement, html, css} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\n\n/*Changes the color of the guys \nhair/eyebrow, \neyes,  \nmustache/beard,\nshirt\n\ncolors include \n\nHair/eyebrow/beard/mustache\nblack, grey, brown, blond\n\neyes\nblack, grey, brown, green, blue\n\nshirt\ngreen, orange, pink, purple, red, white, yellow\n\n\n\nremove\nhair\nmustache/beard\n\n\n\n\n*/\n\n/**\n * An example element.\n *\n * @fires count-changed - Indicates when the count changes\n * @slot - This element has a slot\n * @csspart button - The button\n */\n@customElement('my-options')\nexport class myOptions extends LitElement {\n  static override styles = css`\n  :host {\n      display: block;\n      border: solid 1px gray;\n      padding: 16px;\n      max-width: 800px;\n      margin: 16px;\n    }\n\n  `;\n\n  /**\n   * The name to say \"Hello\" to.\n   */\n  @property()\n  name = 'World';\n  colorName = 'null'\n  HairColor = new Map([\n    ['Black', '#000000'],\n    ['Grey', '#808080'],\n    ['Brown', '#964B00']\n  ]);\n\n  /**\n   * The number of times the button has been clicked.\n   */\n  @property({\n    type: Number\n  })\n  count = 0;\n  purple = \"#9F2B68\"\n\n  override render() {\n    return html `\n\n  <div> HairColor</div>\n      <h1>${this._MakeChangeButtons(this.HairColor)}</h1>\n      <!--<button @click=${this._onClick} part=\"button\">\n        Click Count: ${this.count}\n      </button>-->\n     \n\n      \n    `;\n\n\n  }\n\n  private _onClick() {\n    this.count++;\n    this.dispatchEvent(new CustomEvent('count-changed'));\n  }\n\n\n\n  _MakeChangeButtons(hairColors: Map<string, string>) {\n  \n    for (let color of hairColors)\n    {\n     \n      return html`  \n      <button @click=\"${this._ChangeHairColor(color[0])}\">\n         ${color[0]}\n      </button>\n      \n     \n    \n\n    `;\n  }\n  return\n}\n  \n  /**\n   * Formats a greeting\n   * @param colorName The name of the color\n   * @param colorhex The hex of the color\n   */\n  \n  _ChangeHairColor(colorName: string ): string {\n    console.log(colorName)\n    \n    \n    return `\n   \n    \n  \n      `;\n\n\n  }\n\n\n  /**\n   * Formats a greeting\n   * @param name The name to say \"Hello\" to\n   */\n  sayHello(name: string): string {\n    return `Hello, ${name}`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'my-options': myOptions;\n  }\n}"]}